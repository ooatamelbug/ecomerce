components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  name: Users
  desription: the api of user management


paths:
  # rigester user
  /api/user:
    post:
      summary: register user
      tags: [Users]
      description: regester new user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              firstName:
                type: string
                description: first Name of new user
              lastName:
                type: string
                description: last Name of new user
              email:
                type: string
                description: email of user
              username:
                type: string
                description: email of user
              password:
                type: string
                description: password of user
      responses:
        201:
          description: ok
        400:
          description: input error
          schema:
            type: object
            properties:
              message: 
                type: string
              path:
                type: string
              time:
                type: date
              validationData:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
        500:
          description: server error
          schema:
            type: object
            properties:
              message:
                type: string
  
  /api/user/login:
    post:
      summary: login api
      tags: [Users]
      description: login user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: success login
          schema:
            type: object
            properties:
              token:
                type: string
                readOnly: true
              user:
                type: object
                properties:
                  id:
                    type: integer
                  firstName:
                    type: string
                    description: first Name of new user
                  lastName:
                    type: string
                    description: last Name of new user
                  email:
                    type: string
                    description: email of user
                  username:
                    type: string
                    description: email of user
        404:
          description: not user
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: server error
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: string
